'''
题目: 给定一组数据，将这组数据任意组合成子序列
'''
'''
思路: 

1. 定义一个 masks 数组，里面的数值只用 2**n 表示，n 取决于数组的长度
   masks 用二进制表示关心的哪一位的数，方便做数值的 位与(&) 运算
   例如：masks = [1,2,4,8], 即 masks = [1, 10, 100, 1000], 
        即只关心 [第1位, 第2位, 第3位, 第4位]
        
2. 定义一个 i 变量，i 从 0 到 2**n，用二进制表示组合的方式
   例如：i = 0,    1,    2,    3,    4,    5,    6,    7,    8 
   即为：i = 0,    1,   10,   11,  100,  101,  110,  111, 1000
   非常有效的表示了所有的组合方式
   
3. 将 masks 数组的值依次与 i 做 位与(&)运算，得到的结果即为想要的组合，牛逼
'''

def powerset(s):
	n = len(s)
	# 1<<j 表示 j 的二进制右移 1 位，即为 2**n
	# 例如：当 s == [1, 2, 3, 4] 时, masks == [1, 2, 4, 8]
	masks = [1<<j for j in range(n)]
	print(masks)
	for i in range(2**n):
		yield [s[j] for j in range(n) if (masks[j] & i)]

for elem in powerset([1,2,3,4,5]):
	print(elem)

